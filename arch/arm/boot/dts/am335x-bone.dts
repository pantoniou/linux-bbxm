/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

/include/ "am33xx.dtsi"

/ {
	model = "TI AM335x BeagleBone";
	compatible = "ti,am335x-bone", "ti,am33xx";

	cpus {
		cpu@0 {
			cpu0-supply = <&dcdc2_reg>;
		};
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x10000000>; /* 256 MB */
	};

	am3358_pinmux: pinmux@44e10800 {
		spi1_pins: pinmux_spi1_pins {
			pinctrl-single,pins = <
				0x190 0x13	/* mcasp0_aclkx.spi1_sclk, OUTPUT_PULLUP | MODE3 */
				0x194 0x33	/* mcasp0_fsx.spi1_d0, INPUT_PULLUP | MODE3 */
				0x198 0x13	/* mcasp0_axr0.spi1_d1, OUTPUT_PULLUP | MODE3 */
				0x19c 0x13	/* mcasp0_ahclkr.spi1_cs0, OUTPUT_PULLUP | MODE3 */
			>;
		};
		lcd_pins: pinmux_lcd_pins {
			pinctrl-single,pins = <
				0x1a4 0x17	/* mcasp0_fsr.gpio3_19, OUTPUT_PULLUP | MODE7 */
				0x1ac 0x17	/* mcasp0_ahclkx.gpio3_21, OUTPUT_PULLUP | MODE7 */
			>;
		};
		gpevt_pins: pinmux_gpevt_pins {
			pinctrl-single,pins = <
				0x090 0x37	/* gpmc_advn_ale.gpio2_2, INPUT_PULLUP | MODE7 */
			>;
		};
		userled_pins: pinmux_userled_pins {
			pinctrl-single,pins = <
				0x54 0x7	/* gpmc_a5.gpio1_21, OUTPUT | MODE7 */
				0x58 0x17	/* gpmc_a6.gpio1_22, OUTPUT_PULLUP | MODE7 */
				0x5c 0x7	/* gpmc_a7.gpio1_23, OUTPUT | MODE7 */
				0x60 0x17	/* gpmc_a8.gpio1_24, OUTPUT_PULLUP | MODE7 */
			>;
		};
		i2c2_pins: pinmux_i2c2_pins {
			pinctrl-single,pins = <
				0x178 0x73 	/* uart1_ctsn.i2c2_sda, SLEWCTRL_SLOW | INPUT_PULLUP | MODE3 */
				0x17c 0x73	/* uart1_rtsn.i2c2_scl, SLEWCTRL_SLOW | INPUT_PULLUP | MODE3 */
			>;
		};

		bone_dvi_cape_led_pins: pinmux_bone_dvi_cape_led_pins {
			pinctrl-single,pins = <
				0x48 0x07	/* gpmc_a2.gpio1_18, OUTPUT | MODE7 */
				0x4c 0x07	/* gpmc_a3.gpio1_19, OUTPUT | MODE7 */
			>;
		};

		bone_dvi_cape_dvi_00A0_pins: pinmux_bone_dvi_cape_dvi_00A0_pins {
			pinctrl-single,pins = <
				0x1c 0x07	/* gpmc_ad7.gpio1_7, OUTPUT | MODE7 - DVIPDn */

				0xa0 0x08	/* lcd_data0.lcd_data0, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xa4 0x08	/* lcd_data1.lcd_data1, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xa8 0x08	/* lcd_data2.lcd_data2, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xac 0x08	/* lcd_data3.lcd_data3, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xb0 0x08	/* lcd_data4.lcd_data4, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xb4 0x08	/* lcd_data5.lcd_data5, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xb8 0x08	/* lcd_data6.lcd_data6, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xbc 0x08	/* lcd_data7.lcd_data7, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xc0 0x08	/* lcd_data8.lcd_data8, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xc4 0x08	/* lcd_data9.lcd_data9, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xc8 0x08	/* lcd_data10.lcd_data10, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xcc 0x08	/* lcd_data11.lcd_data11, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xd0 0x08	/* lcd_data12.lcd_data12, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xd4 0x08	/* lcd_data13.lcd_data13, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xd8 0x08	/* lcd_data14.lcd_data14, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xdc 0x08	/* lcd_data15.lcd_data15, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xe0 0x00	/* lcd_vsync.lcd_vsync, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT */
				0xe4 0x00	/* lcd_hsync.lcd_hsync, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT */
				0xe8 0x00	/* lcd_pclk.lcd_pclk, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT */
				0xec 0x00	/* lcd_ac_bias_en.lcd_ac_bias_en, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT */
			>;
		};

		bone_dvi_cape_dvi_00A1_pins: pinmux_bone_dvi_cape_dvi_00A1_pins {
			pinctrl-single,pins = <
				0x84 0x07	/* gpmc_csn2.gpio1_31, OUTPUT | MODE7 - DVIPDn */

				0xa0 0x08	/* lcd_data0.lcd_data0, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xa4 0x08	/* lcd_data1.lcd_data1, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xa8 0x08	/* lcd_data2.lcd_data2, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xac 0x08	/* lcd_data3.lcd_data3, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xb0 0x08	/* lcd_data4.lcd_data4, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xb4 0x08	/* lcd_data5.lcd_data5, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xb8 0x08	/* lcd_data6.lcd_data6, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xbc 0x08	/* lcd_data7.lcd_data7, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xc0 0x08	/* lcd_data8.lcd_data8, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xc4 0x08	/* lcd_data9.lcd_data9, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xc8 0x08	/* lcd_data10.lcd_data10, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xcc 0x08	/* lcd_data11.lcd_data11, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xd0 0x08	/* lcd_data12.lcd_data12, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xd4 0x08	/* lcd_data13.lcd_data13, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xd8 0x08	/* lcd_data14.lcd_data14, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xdc 0x08	/* lcd_data15.lcd_data15, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT | AM33XX_PULL_DISA */
				0xe0 0x00	/* lcd_vsync.lcd_vsync, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT */
				0xe4 0x00	/* lcd_hsync.lcd_hsync, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT */
				0xe8 0x00	/* lcd_pclk.lcd_pclk, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT */
				0xec 0x00	/* lcd_ac_bias_en.lcd_ac_bias_en, OMAP_MUX_MODE0 | AM33XX_PIN_OUTPUT */
			>;
		};

		bone_geiger_cape_led_pins: pinmux_bone_geiger_cape_led_pins {
			pinctrl-single,pins = <
				0xe4 0x07	/* lcd_hsync.gpio2_23, OUTPUT | MODE7 */
				0xec 0x07	/* lcd_ac_bias_en.gpio2_25, OUTPUT | MODE7 */
			>;
		};

		bone_geiger_cape_pins: pinmux_bone_geiger_cape_pins {
			pinctrl-single,pins = <
				0x48 0x06       /* gpmc_a2.ehrpwm1a, OMAP_MUX_MODE6 | AM33XX_PIN_OUTPUT */
				/* 0x19c 0x34 */	/* mcasp0_ahclkr.eCAP2_in_PWM2_out, OMAP_MUX_MODE4 | INPUT_PULLUP */
				0x19c 0x37 	/* mcasp0_ahclkr.gpio3_17, OMAP_MUX_MODE4 | INPUT_PULLUP */
			>;
		};
	};

	ocp {
		uart1: serial@44e09000 {
			status = "okay";
		};

		gpio-leds {
			compatible = "gpio-leds";
			pinctrl-names = "default";
			pinctrl-0 = <&userled_pins>;

			led0 {
				label = "beaglebone:green:usr0";
				gpios = <&gpio2 21 0>;
				linux,default-trigger = "heartbeat";
				default-state = "off";
			};

			led1 {
				label = "beaglebone:green:usr1";
				gpios = <&gpio2 22 0>;
				linux,default-trigger = "mmc0";
				default-state = "off";
			};

			led2 {
				label = "beaglebone:green:usr2";
				gpios = <&gpio2 23 0>;
				linux,default-trigger = "cpu0";
				default-state = "off";
			};

			led3 {
				label = "beaglebone:green:usr3";
				gpios = <&gpio2 24 0>;
				default-state = "off";
			};
		};

		gpevt {
			compatible = "gpevt";
			pinctrl-names = "default";
			pinctrl-0 = <&gpevt_pins>;
			dmas = <&edma 12>;
			dma-names = "gpioevt";
			gpio-evt = <&gpio3 2 0>;
		};
	};

	capebus: capebus@0 {
			compatible = "bone-capebus";

			bone_dvi_cape: cape@0 {
				compatible = "bone-dvi-cape";
			};

			bone_geiger_cape: cape@1 {
				compatible = "bone-geiger-cape";
			};

			/* overrides; no EEPROM (prototyping) */
			override@0 {
				compatible = "bone-capebus-slot-override";
				slot = <0>;
				board-name = "Geiger Cape";
				version = "00A0";
				manufacturer = "Geiger Inc";
				/* TODO: Add the rest */
			};
	};
};

&i2c0 {
	status = "okay";
	clock-frequency = <400000>;

	tps: tps@24 {
		reg = <0x24>;
	};

	baseboard_eeprom: baseboard_eeprom@50 {
		compatible = "at,24c256";
		reg = <0x50>;
	};
       
};

&i2c2 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&i2c2_pins>;

	clock-frequency = <100000>;

	/* OK, I know these are cape but for now it will do */
	cape_eeprom_0: cape_eeprom_0@54 {
		compatible = "at,24c256";
		reg = <0x54>;
	};

	cape_eeprom_1: cape_eeprom_1@55 {
		compatible = "at,24c256";
		reg = <0x55>;
	};

	cape_eeprom_2: cape_eeprom_2@56 {
		compatible = "at,24c256";
		reg = <0x56>;
	};

	cape_eeprom_3: cape_eeprom_3@57 {
		compatible = "at,24c256";
		reg = <0x57>;
	};
};

/include/ "tps65217.dtsi"

&tps {
	regulators {
		dcdc1_reg: regulator@0 {
			regulator-always-on;
		};

		dcdc2_reg: regulator@1 {
			/* VDD_MPU voltage limits 0.95V - 1.26V with +/-4% tolerance */
			regulator-name = "vdd_mpu";
			regulator-min-microvolt = <925000>;
			regulator-max-microvolt = <1325000>;
			regulator-boot-on;
			regulator-always-on;
		};

		dcdc3_reg: regulator@2 {
			/* VDD_CORE voltage limits 0.95V - 1.1V with +/-4% tolerance */
			regulator-name = "vdd_core";
			regulator-min-microvolt = <925000>;
			regulator-max-microvolt = <1150000>;
			regulator-boot-on;
			regulator-always-on;
		};

		ldo1_reg: regulator@3 {
			regulator-always-on;
		};

		ldo2_reg: regulator@4 {
			regulator-always-on;
		};

		ldo3_reg: regulator@5 {
			regulator-min-microvolt = <1800000>;
			regulator-max-microvolt = <3300000>;
			regulator-always-on;
		};

		ldo4_reg: regulator@6 {
			regulator-always-on;
		};
	};
};

&mmc1 {
	vmmc-supply = <&ldo3_reg>;
};

&spi1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&spi1_pins>;

	lcd@0 {
		compatible = "adafruit,tft-lcd-1.8-green", "sitronix,st7735";
		spi-max-frequency = <8000000>;
		reg = <0>;
		spi-cpol;
		spi-cpha;
		pinctrl-names = "default";
		pinctrl-0 = <&lcd_pins>;
		st7735-rst = <&gpio4 19 0>;
		st7735-dc = <&gpio4 21 0>;
	};
};

&edma {
	ti,edma-xbar-event-map = <32 12>;
};

&cpsw_emac0 {
	phy_id = "4a101000.mdio:00";
};

&cpsw_emac1 {
	phy_id = "4a101000.mdio:01";
};

&capebus {
	slots = <&cape_eeprom_0 &cape_eeprom_1 &cape_eeprom_2 &cape_eeprom_3>;
};

&bone_dvi_cape {
	board-name = "BeagleBone DVI-D CAPE";

	/* hacky, since this is not a proper DT platform device */
	/* but until we have DT bindings... */
	version@00A0 {
		version = "00A0";
		dvi {
			compatible = "da8xx-dt";
			pinctrl-names = "default";
			pinctrl-0 = <&bone_dvi_cape_dvi_00A0_pins>;
			powerdn-gpio = <&gpio2 7 0>;
			ti,hwmods = "lcdc";
		};
	};

	version@00A1 {
		version = "00A1", "01";
		dvi {
			compatible = "da8xx-dt";
			pinctrl-names = "default";
			pinctrl-0 = <&bone_dvi_cape_dvi_00A1_pins>;
			powerdn-gpio = <&gpio2 31 0>;
			ti,hwmods = "lcdc";
		};
	};

	gpio-leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&bone_dvi_cape_led_pins>;

		dvi-led0 {
			label = "dvi:green:usr0";
			gpios = <&gpio2 18 0>;
			linux,default-trigger = "heartbeat";
			default-state = "off";
		};

		dvi-led1 {
			label = "dvi:green:usr1";
			gpios = <&gpio2 19 0>;
			linux,default-trigger = "mmc0";
			default-state = "off";
		};
	};
};

&bone_geiger_cape {
	board-name = "Geiger Cape";

	pinctrl-names = "default";
	pinctrl-0 = <&bone_geiger_cape_pins>;

	pwms = <&ehrpwm1 0 500000 0>;
	pwm-names = "bone-geiger-cape";

	pwm-frequency  = <20000>;	/* 20KHz */
	pwm-duty-cycle = <60>;		/* 60% */

	event-blink-delay = <30>;	/* 30ms */

	gpios = <&gpio4 17 0>;		/* pulse */

	vsense-name = "AIN5";		/* analog vsense */
	vsense-scale = <37325>;		/* scaling */

	gpio-leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&bone_geiger_cape_led_pins>;

		geiger-led0 {
			label = "geiger:green:usr0";
			gpios = <&gpio3 23 0>;
			linux,default-trigger = "geiger-run";
			default-state = "off";
		};

		geiger-led1 {
			label = "geiger:red:usr1";
			gpios = <&gpio3 25 0>;
			linux,default-trigger = "geiger-event";
			default-state = "off";
		};
	};
};
